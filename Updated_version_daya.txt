# === CONFIGURATION ===
$CsvFilePath = "C:\Path\To\Input.csv"  # üîÅ Update this to your actual CSV file path

# === LOGGING SETUP ===
$scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Path
$logFolder = Join-Path -Path $scriptDir -ChildPath "Logs"
if (-Not (Test-Path $logFolder)) {
    New-Item -ItemType Directory -Path $logFolder | Out-Null
}

# Daily log file (one per date)
$logDate = Get-Date -Format "yyyy-MM-dd"
$logFileName = "Delete-OldFiles-Log_$logDate.txt"
$logFile = Join-Path -Path $logFolder -ChildPath $logFileName

# Header per script run
Add-Content -Path $logFile -Value "`n[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")] --- Script Run Started ---"
Add-Content -Path $logFile -Value "Using CSV: $CsvFilePath"

# === VALIDATE INPUT FILE ===
if (-Not (Test-Path $CsvFilePath)) {
    Add-Content -Path $logFile -Value "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")] ERROR: CSV file not found at path: $CsvFilePath"
    exit 1
}

# === PROCESS EACH ENTRY FROM CSV ===
$entries = Import-Csv -Path $CsvFilePath

foreach ($entry in $entries) {
    $folderPath = $entry.FolderPath
    $daysOld = [int]$entry.DaysOld
    $includeSubfolders = [bool]$entry.IncludeSubfolders
    $deletedCount = 0

    if (-Not (Test-Path $folderPath)) {
        Add-Content -Path $logFile -Value "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")] WARNING: Folder not found: $folderPath"
        continue
    }

    $cutoffDate = (Get-Date).AddDays(-$daysOld)
    $searchOption = if ($includeSubfolders) { '-Recurse' } else { '' }

    $files = Get-ChildItem -Path $folderPath $searchOption -File -ErrorAction SilentlyContinue |
             Where-Object { $_.LastWriteTime -lt $cutoffDate }

    foreach ($file in $files) {
        try {
            Remove-Item -Path $file.FullName -Force -ErrorAction Stop
            $deletedCount++
            Add-Content -Path $logFile -Value "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")] Deleted: $($file.FullName)"
        } catch {
            Add-Content -Path $logFile -Value "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")] ERROR: Failed to delete $($file.FullName) - $($_.Exception.Message)"
        }
    }

    Add-Content -Path $logFile -Value "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")] Folder: $folderPath | Files Deleted: $deletedCount"
}

Add-Content -Path $logFile -Value "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")] --- Script Run Completed ---"
