# === CONFIG ===
$CsvFilePath = "C:\Path\To\Input.csv"  # <-- EDIT this to your CSV path

# === LOG SETUP ===
$scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Path
$logFolder = Join-Path -Path $scriptDir -ChildPath "Logs"
if (-Not (Test-Path $logFolder)) {
    New-Item -ItemType Directory -Path $logFolder | Out-Null
}
$logDate = Get-Date -Format "yyyy-MM-dd"
$logFileName = "Delete-OldFiles-Log_$logDate.txt"
$logFile = Join-Path -Path $logFolder -ChildPath $logFileName
Add-Content -Path $logFile -Value "`n[$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')] --- Script Run Started ---"
Add-Content -Path $logFile -Value "CSV File: $CsvFilePath"

# === READ CSV ===
if (-Not (Test-Path $CsvFilePath)) {
    Add-Content -Path $logFile -Value "ERROR: CSV file not found at path $CsvFilePath"
    Write-Host "ERROR: CSV file not found at path $CsvFilePath"
    exit 1
}

try {
    $entries = Import-Csv -Path $CsvFilePath
} catch {
    Add-Content -Path $logFile -Value "ERROR: Failed to read CSV - $($_.Exception.Message)"
    Write-Host "ERROR: Failed to read CSV - $($_.Exception.Message)"
    exit 1
}

foreach ($entry in $entries) {
    $folderPath = $entry.FolderPath.Trim()
    $daysOld = [int]$entry.DaysOld
    $includeSubfolders = [bool]$entry.IncludeSubfolders
    $deletedCount = 0

    Add-Content -Path $logFile -Value "[$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')] Processing: Folder=$folderPath | DaysOld=$daysOld | IncludeSubfolders=$includeSubfolders"

    if (-Not (Test-Path $folderPath)) {
        Add-Content -Path $logFile -Value "WARNING: Folder not found: $folderPath"
        Write-Host "WARNING: Folder not found: $folderPath"
        continue
    }

    $cutoffDate = (Get-Date).AddDays(-$daysOld)
    Add-Content -Path $logFile -Value "Cutoff date for deletion: $cutoffDate"

    # Build parameters for Get-ChildItem
    if ($includeSubfolders) {
        $files = Get-ChildItem -Path $folderPath -Recurse -File -ErrorAction SilentlyContinue |
                 Where-Object { $_.LastWriteTime -lt $cutoffDate }
    } else {
        $files = Get-ChildItem -Path $folderPath -File -ErrorAction SilentlyContinue |
                 Where-Object { $_.LastWriteTime -lt $cutoffDate }
    }

    Add-Content -Path $logFile -Value "Found $($files.Count) file(s) to delete."

    if ($files.Count -eq 0) {
        Write-Host "No files older than $daysOld days found in $folderPath"
        continue
    }

    foreach ($file in $files) {
        try {
            Remove-Item -Path $file.FullName -Force -ErrorAction Stop
            $deletedCount++
            Add-Content -Path $logFile -Value "Deleted: $($file.FullName) at $(Get-Date -Format 'HH:mm:ss')"
            Write-Host "Deleted: $($file.FullName)"
        } catch {
            Add-Content -Path $logFile -Value "ERROR deleting $($file.FullName): $($_.Exception.Message)"
            Write-Host "ERROR deleting $($file.FullName): $($_.Exception.Message)"
        }
    }

    Add-Content -Path $logFile -Value "Summary: Deleted $deletedCount files from $folderPath"
    Write-Host "Summary: Deleted $deletedCount files from $folderPath"
}

Add-Content -Path $logFile -Value "--- Script Run Completed ---"
Write-Host "--- Script Run Completed ---"
